# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!

set $mod Mod4

set $DP0 DP-4
set $DP1 HDMI-0

# set second monitor if available
exec xrandr --output $DP0 --auto --left-of $DP1 --auto

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:monospace 12

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
# font pango:DejaVu Sans Mono 8

# Start XDG autostart .desktop files using dex. See also
# https://wiki.archlinux.org/index.php/XDG_Autostart
exec --no-startup-id dex --autostart --environment i3

# Picom
exec_always --no-startup-id picom &

# set $Locker i3lock -e -i ~/Pictures/wallpaper/lock.png -c 232634 && sleep 0
# set $Locker i3lockr --blur 25 -- --nofork --ignore-empty-password
set $Locker ~/.config/i3/lock.sh

# The combination of xss-lock, nm-applet and pactl is a popular choice, so
# they are included here as an example. Modify as you see fit.

# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the
# screen before suspend. Use loginctl lock-session to lock your screen.
exec --no-startup-id xss-lock --transfer-sleep-lock -- $Locker

# NetworkManager is the most popular way to manage wireless networks on Linux,
# and nm-applet is a desktop environment-independent system tray GUI for it.

exec --no-startup-id nm-applet

exec --no-startup-id feh --bg-scale ~/Pictures/wallpaper/cat_waves.png

exec --no-startup-id insync start

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

#map capslock to ctrl
exec --no-startup-id xmodmap ~/.xmodmap

# start a terminal
bindsym $mod+Return exec alacritty
bindsym $mod+Shift+Return exec alacritty --class floating

for_window [instance="^floating$"] floating enable

# kill focused window
bindsym $mod+q kill

# start dmenu (a program launcher)
# bindsym $mod+d exec --no-startup-id dmenu_run -fn "monospace 15" 
# A more modern dmenu replacement is rofi:
bindsym $mod+d exec --no-startup-id rofi -show drun

# Screenshots source: https://gist.github.com/dianjuar/ee774561a8bc02b077989bc17424a19f
## Screenshots to File
bindsym Print exec --no-startup-id maim "/home/$USER/Pictures/$(date)"
bindsym $mod+Print exec --no-startup-id maim --window $(xdotool getactivewindow) "/home/$USER/Pictures/$(date)"
bindsym Shift+Print exec --no-startup-id maim --select "/home/$USER/Pictures/$(date)"

## Clipboard Screenshots
bindsym Ctrl+Print exec --no-startup-id maim | xclip -selection clipboard -t image/png
bindsym Ctrl+$mod+Print exec --no-startup-id maim --window $(xdotool getactivewindow) | xclip -selection clipboard -t image/png
bindsym Ctrl+Shift+Print exec --no-startup-id maim --select | xclip -selection clipboard -t image/png

# There also is i3-dmenu-desktop which only displays applications shipping a
# .desktop file. It is a wrapper around dmenu, so you need that installed.
# bindcode $mod+40 exec --no-startup-id i3-dmenu-desktop

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
# bindsym $mod+h split h

# split in vertical orientation
bindsym $mod+v split toggle

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+f floating toggle

floating_maximum_size 2540 x 1420

# change focus between tiling / floating windows
bindsym Mod1+Tab focus mode_toggle

exec setxkbmap -layout us
bindsym $mod+Shift+d exec setxkbmap de
bindsym $mod+Shift+e exec setxkbmap us

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"

workspace $ws1 output $DP0
workspace $ws2 output $DP0
workspace $ws3 output $DP0
workspace $ws4 output $DP0
workspace $ws5 output $DP0
workspace $ws6 output $DP0
workspace $ws7 output $DP1
workspace $ws8 output $DP1
workspace $ws9 output $DP1
workspace $ws10 output $DP1

# switch to workspace
bindsym $mod+1 workspace number $ws1
bindsym $mod+2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9
bindsym $mod+0 workspace number $ws10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9
bindsym $mod+Shift+0 move container to workspace number $ws10

assign [class="^thunderbird$"] 6
assign [class="^Signal$"] 7
assign [class="^TelegramDesktop$"] 7
assign [class="^discord$"] 9
assign [class="^KeePassXC$"] 10

for_window [class="^thunderbird$" instance="^Msgcompose$"] floating enable
for_window [class="^Steam$" title="^Steam - News$"] floating enable
for_window [class="^Steam$" title="^Friends List$"] floating enable
for_window [class="^Spotify$"] floating enable

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
# bindsym $mod+Shift+q exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym h resize shrink width 25 px or 10 ppt
        bindsym j resize grow height 25 px or 10 ppt
        bindsym k resize shrink height 25 px or 10 ppt
        bindsym l resize grow width 25 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 25 px or 10 ppt
        bindsym Down resize grow height 25 px or 10 ppt
        bindsym Up resize shrink height 25 px or 10 ppt
        bindsym Right resize grow width 25 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"

set $mode_system System (l) lock, (e) logout, (s) suspend, (h) hibernate, (r) reboot, (Shift+s) shutdown
mode "$mode_system" {
    bindsym l exec --no-startup-id $Locker, mode "default"
    bindsym e exec --no-startup-id i3-msg exit, mode "default"
    bindsym s exec --no-startup-id $Locker && systemctl suspend, mode "default"
    bindsym h exec --no-startup-id $Locker && systemctl hibernate, mode "default"
    bindsym r exec --no-startup-id systemctl reboot, mode "default"
    bindsym Shift+s exec --no-startup-id systemctl poweroff -i, mode "default"

    # back to normal: Enter or Escape
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

bindsym $mod+End mode "$mode_system"

## German layout
# bindsym $mod+odiaeresis exec --no-startup-id $Locker
bindsym $mod+Shift+odiaeresis exec --no-startup-id $Locker

## US layout
# bindsym $mod+semicolon exec --no-startup-id $Locker
bindsym $mod+Shift+semicolon exec --no-startup-id $Locker

# class                 border  bground text    indicator child_border
client.focused          #e78284 #e78284 #FFFFFF #81c8be   #e78284
client.focused_inactive #eebebe #eebebe #FFFFFF #99d1db   #eebebe
client.unfocused        #f2d5cf #f2d5cf #888888 #99d1db   #f4b8e4
client.urgent           #EC69A0 #DB3279 #FFFFFF #99d1db   #DB3279
client.placeholder      #000000 #0C0C0C #FFFFFF #99d1db   #0C0C0C

client.background       #FFFFFF

title_align center
for_window [class="^.*"] border pixel 5

hide_edge_borders none

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
# bar {
#         status_command i3status
# }

# use ploybar instead
exec --no-startup-id ~/.config/polybar/launch.sh &

